{"version":3,"sources":["components/section/Section.js","components/statistics/Statistics.js","components/feedback-options/FeedbackOptions.js","components/notification/Notification.js","components/App.js","index.js"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","type","name","onClick","Notification","message","App","state","handleChange","event","console","dir","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"2OASeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,ICQUC,G,MAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAvB,IAA8BC,0BAA9B,MAAmD,EAAnD,SACjB,oCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,QCOWC,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACtB,oCACE,4BAAQC,KAAK,SAASC,KAAK,OAAOC,QAASH,GAA3C,QAGA,4BAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,GAA9C,WAGA,4BAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,GAA1C,SCHWI,EALM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAErB,OAAO,2BAAIA,IC+CEC,E,2MA5CbC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,aAAe,SAAAC,GACbC,QAAQC,IAAIF,EAAMG,QAClB,IAAMV,EAAOO,EAAMG,OAAOV,KAC1B,EAAKW,UAAS,SAAAC,GAAS,sBAAQZ,EAAOY,EAAUZ,GAAQ,O,EAG1Da,mBAAqB,WAAO,IAAD,EACM,EAAKR,MAEtC,OAH2B,EACjBb,KADiB,EACXC,QADW,EACFC,K,EAKzBoB,gCAAkC,WAAO,IAC/BtB,EAAS,EAAKa,MAAdb,KACR,OAAOuB,KAAKC,MAAc,IAAPxB,EAAc,EAAKqB,uB,wEAItC,OACE,oCACE,kBAAC,EAAD,CAASxB,MAAM,yBACb,kBAAC,EAAD,CAAiBS,QAASmB,KAAKX,gBAEjC,kBAAC,EAAD,CAASjB,MAAM,cACkB,IAA9B4B,KAAKJ,qBAA8B,kBAAC,EAAD,CAClCrB,KAAMyB,KAAKZ,MAAMb,KACjBC,QAASwB,KAAKZ,MAAMZ,QACpBC,IAAKuB,KAAKZ,MAAMX,IAChBC,MAAOsB,KAAKJ,qBACZjB,mBAAoBqB,KAAKH,oCAE1B,kBAAC,EAAD,CAAcX,QAAQ,4B,GAtCfe,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.55a9a4d5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h3>{title}</h3>\n    {children}\n  </section>\n);\n\nexport default Section;\n","import React from 'react';\nimport './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage = 0 }) => (\n  <>\n    <p>Good: {good}</p>\n    <p>Neutral: {neutral}</p>\n    <p>Bad: {bad}</p>\n    <p>Total: {total}</p>\n    <p>Positive feedback: {positivePercentage}%</p>\n  </>\n);\n\nexport default Statistics;\n","import React from 'react';\n\nconst FeedbackOptions = ({ options }) => (\n  <>\n    <button type=\"button\" name=\"good\" onClick={options}>\n      Good\n    </button>\n    <button type=\"button\" name=\"neutral\" onClick={options}>\n      Neutral\n    </button>\n    <button type=\"button\" name=\"bad\" onClick={options}>\n      Bad\n    </button>\n  </>\n);\n\nexport default FeedbackOptions;\n","import React from 'react';\n\nconst Notification = ({message}) => {\n  \n  return <p>{message}</p>;\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from './section/Section';\nimport Statistics from './statistics/Statistics';\nimport FeedbackOptions from './feedback-options/FeedbackOptions';\nimport Notification from './notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n\t};\n\n  handleChange = event => {\n    console.dir(event.target);\n    const name = event.target.name;\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state; \n\t\t\n\t\treturn good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this.handleChange} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() !== 0 ? (<Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />) :\n          (<Notification message=\"No feedback given\" />)}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}